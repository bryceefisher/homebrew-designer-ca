// <auto-generated />
using System;
using HomebrewDesigner.Infrastructure.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_Homebrew_Recipe_Designer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class RecipeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Entities.Fermentables", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Color")
                        .HasColumnType("double");

                    b.Property<double>("MaxInBatch")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("PotentialGravity")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.ToTable("Fermentables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = 2.2000000000000002,
                            MaxInBatch = 100.0,
                            Name = "2-row",
                            Origin = "UnitedStates",
                            PotentialGravity = 1.036,
                            Type = "Grain"
                        },
                        new
                        {
                            Id = 2,
                            Color = 3.5,
                            MaxInBatch = 80.0,
                            Name = "Maris Otter",
                            Origin = "UnitedKingdom",
                            PotentialGravity = 1.038,
                            Type = "Grain"
                        },
                        new
                        {
                            Id = 3,
                            Color = 20.0,
                            MaxInBatch = 15.0,
                            Name = "Caramel/Crystal Malt - 20L",
                            Origin = "UnitedStates",
                            PotentialGravity = 1.0349999999999999,
                            Type = "Grain"
                        },
                        new
                        {
                            Id = 4,
                            Color = 2.0,
                            MaxInBatch = 80.0,
                            Name = "Pilsner Malt",
                            Origin = "Belgium",
                            PotentialGravity = 1.036,
                            Type = "Grain"
                        },
                        new
                        {
                            Id = 5,
                            Color = 8.0,
                            MaxInBatch = 15.0,
                            Name = "Munich Malt",
                            Origin = "Germany",
                            PotentialGravity = 1.0369999999999999,
                            Type = "Grain"
                        });
                });

            modelBuilder.Entity("Entities.Hop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("AlphaAcid")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Hops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlphaAcid = 12.0,
                            Name = "Citra"
                        },
                        new
                        {
                            Id = 2,
                            AlphaAcid = 13.0,
                            Name = "Mosaic"
                        },
                        new
                        {
                            Id = 3,
                            AlphaAcid = 14.0,
                            Name = "Motueka"
                        },
                        new
                        {
                            Id = 4,
                            AlphaAcid = 12.0,
                            Name = "Simcoe"
                        },
                        new
                        {
                            Id = 5,
                            AlphaAcid = 7.0,
                            Name = "Cascade"
                        },
                        new
                        {
                            Id = 6,
                            AlphaAcid = 9.0,
                            Name = "Amarillo"
                        },
                        new
                        {
                            Id = 7,
                            AlphaAcid = 3.0,
                            Name = "Saaz"
                        },
                        new
                        {
                            Id = 8,
                            AlphaAcid = 5.0,
                            Name = "Styrian Goldings"
                        });
                });

            modelBuilder.Entity("Entities.HopAddition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("Amount")
                        .HasColumnType("double");

                    b.Property<int?>("BoilTime")
                        .HasColumnType("int");

                    b.Property<int?>("DryHopDays")
                        .HasColumnType("int");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HopId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Use")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HopId");

                    b.HasIndex("RecipeId");

                    b.ToTable("HopAddition");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 25.0,
                            BoilTime = 60,
                            DryHopDays = 0,
                            Form = "Pellet",
                            HopId = 1,
                            RecipeId = 1,
                            Use = "Boil"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 25.0,
                            BoilTime = 60,
                            DryHopDays = 0,
                            Form = "Pellet",
                            HopId = 2,
                            RecipeId = 1,
                            Use = "Boil"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 25.0,
                            BoilTime = 60,
                            DryHopDays = 0,
                            Form = "Pellet",
                            HopId = 3,
                            RecipeId = 1,
                            Use = "Boil"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 20.0,
                            BoilTime = 60,
                            DryHopDays = 5,
                            Form = "Pellet",
                            HopId = 1,
                            RecipeId = 2,
                            Use = "Boil"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 15.0,
                            BoilTime = 15,
                            DryHopDays = 3,
                            Form = "Pellet",
                            HopId = 2,
                            RecipeId = 2,
                            Use = "Boil"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 30.0,
                            BoilTime = 0,
                            DryHopDays = 7,
                            Form = "Pellet",
                            HopId = 5,
                            RecipeId = 2,
                            Use = "Dry Hop"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 20.0,
                            BoilTime = 60,
                            DryHopDays = 0,
                            Form = "Pellet",
                            HopId = 7,
                            RecipeId = 3,
                            Use = "Boil"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 15.0,
                            BoilTime = 15,
                            DryHopDays = 0,
                            Form = "Pellet",
                            HopId = 8,
                            RecipeId = 3,
                            Use = "Boil"
                        });
                });

            modelBuilder.Entity("Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("ABV")
                        .HasColumnType("double");

                    b.Property<double?>("AmountOfWater")
                        .HasColumnType("double");

                    b.Property<double>("Color")
                        .HasColumnType("double");

                    b.Property<double>("FinalGravity")
                        .HasColumnType("double");

                    b.Property<double>("IBU")
                        .HasColumnType("double");

                    b.Property<int?>("MashTemp")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double?>("OriginalGravity")
                        .HasColumnType("double");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double?>("WaterRatio")
                        .HasColumnType("double");

                    b.Property<double?>("YeastAmount")
                        .HasColumnType("double");

                    b.Property<int>("YeastId")
                        .HasColumnType("int");

                    b.Property<double?>("YeastViability")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("YeastId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ABV = 7.2000000000000002,
                            AmountOfWater = 6.0,
                            Color = 12.0,
                            FinalGravity = 1.01,
                            IBU = 60.0,
                            MashTemp = 152,
                            Name = "Classic IPA",
                            OriginalGravity = 1.0649999999999999,
                            Style = "AmericanIPA",
                            WaterRatio = 1.25,
                            YeastAmount = 1.0,
                            YeastId = 1,
                            YeastViability = 95.0
                        },
                        new
                        {
                            Id = 2,
                            ABV = 5.2000000000000002,
                            AmountOfWater = 5.5,
                            Color = 8.0,
                            FinalGravity = 1.012,
                            IBU = 35.0,
                            MashTemp = 150,
                            Name = "Hoppy Pale Ale",
                            OriginalGravity = 1.052,
                            Style = "AmericanPaleAle",
                            WaterRatio = 1.2,
                            YeastAmount = 1.0,
                            YeastId = 2,
                            YeastViability = 95.0
                        },
                        new
                        {
                            Id = 3,
                            ABV = 7.5,
                            AmountOfWater = 6.5,
                            Color = 18.0,
                            FinalGravity = 1.018,
                            IBU = 25.0,
                            MashTemp = 154,
                            Name = "Belgian Dubbel",
                            OriginalGravity = 1.0720000000000001,
                            Style = "BelgianDubbel",
                            WaterRatio = 1.3,
                            YeastAmount = 1.0,
                            YeastId = 3,
                            YeastViability = 90.0
                        });
                });

            modelBuilder.Entity("Entities.Recipe+FermentablePair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FermentableId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("FermentableId");

                    b.HasIndex("RecipeId");

                    b.ToTable("FermentablePair");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FermentableId = 1,
                            RecipeId = 1,
                            Weight = 10.0
                        },
                        new
                        {
                            Id = 2,
                            FermentableId = 1,
                            RecipeId = 2,
                            Weight = 8.0
                        },
                        new
                        {
                            Id = 3,
                            FermentableId = 2,
                            RecipeId = 2,
                            Weight = 4.0
                        },
                        new
                        {
                            Id = 4,
                            FermentableId = 4,
                            RecipeId = 3,
                            Weight = 7.0
                        },
                        new
                        {
                            Id = 5,
                            FermentableId = 5,
                            RecipeId = 3,
                            Weight = 5.0
                        });
                });

            modelBuilder.Entity("Entities.Yeast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Flocculation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Lab")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Yeasts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "US-05",
                            Flocculation = "Medium",
                            Form = "Dry",
                            Lab = "Fermentis",
                            Name = "Cal Ale",
                            Type = "Ale"
                        },
                        new
                        {
                            Id = 2,
                            Code = "1056",
                            Flocculation = "Medium",
                            Form = "Liquid",
                            Lab = "Wyeast",
                            Name = "American Ale",
                            Type = "Ale"
                        },
                        new
                        {
                            Id = 3,
                            Code = "S-04",
                            Flocculation = "Low",
                            Form = "Dry",
                            Lab = "Fermentis",
                            Name = "English Ale",
                            Type = "Ale"
                        });
                });

            modelBuilder.Entity("Entities.HopAddition", b =>
                {
                    b.HasOne("Entities.Hop", "Hop")
                        .WithMany()
                        .HasForeignKey("HopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Recipe", null)
                        .WithMany("HopAdditions")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hop");
                });

            modelBuilder.Entity("Entities.Recipe", b =>
                {
                    b.HasOne("Entities.Yeast", "Yeast")
                        .WithMany()
                        .HasForeignKey("YeastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Yeast");
                });

            modelBuilder.Entity("Entities.Recipe+FermentablePair", b =>
                {
                    b.HasOne("Entities.Fermentables", "Fermentable")
                        .WithMany()
                        .HasForeignKey("FermentableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Recipe", null)
                        .WithMany("Maltbill")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fermentable");
                });

            modelBuilder.Entity("Entities.Recipe", b =>
                {
                    b.Navigation("HopAdditions");

                    b.Navigation("Maltbill");
                });
#pragma warning restore 612, 618
        }
    }
}
